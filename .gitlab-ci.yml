# 2019.05.03 김승신

variables:
  MAVEN_CLI_OPTS: "-s .m2/settings.xml --batch-mode"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"

stages:
  - pre-compile
  - compile
  - build-frontend
  - prepare-package
  - package

# 캐시 init
cache:
  paths:
    - .m2/repository/
    - target/

# Spring boot 민감정보 작성
set-app-props:
  stage: pre-compile
  
  script:
    - echo $PWD
    - ls
    # - mvn clean
    - echo $SERVER_PORT
    - echo 'spring.application.name=UPMUREPORT_WEB\n' >  src/main/resources/application.properties
    - echo 'server.port='                             >> src/main/resources/application.properties
    - echo $SERVER_PORT                               >> src/main/resources/application.properties
    - echo "  \n"                                     >> src/main/resources/application.properties
    - echo $DATASOURCE_PROPS                          >> src/main/resources/application.properties
    - echo "  \n"                                     >> src/main/resources/application.properties
    - echo $HIBERNATE_PROPS                           >> src/main/resources/application.properties
    - cat src/main/resources/application.properties

  only:
    - dist
    - pre_dist
    
# Java source 컴파일
compile:
  stage: compile

  script:
    - echo -e 
        "$CI_JOB_STAGE
        ***************************************** \n
        'TRIGGER MAVEN COMPILE'                   \n
        "
    - mvn $MAVEN_CLI_OPTS compile
    - echo -e 
        "
        ***************************************** \n
        "
  only:
    - dist
    - pre_dist

# 유닛 테스트
# test:
#   stage: test
#   script:
#     - mvn $MAVEN_CLI_OPTS test

# frontend 빌드
build-frontend:
  stage: build-frontend

  script:
    - echo -e 
        "
        ***************************************** \n
        'INSTALL AND BUILD NODE PACKAGE VIA NPM'  \n
        "
    - mvn $MAVEN_CLI_OPTS frontend:npm
    - echo -e 
        "
        ***************************************** \n
        "
  only:
    - dist
    - pre_dist

# 리소스 copy to target
resource-copy:
  stage: prepare-package

  script:
    - echo -e 
        "
        ***************************************** \n
        'COPY ALL RESOURCES INTO TARGET'          \n
        "
    - mvn $MAVEN_CLI_OPTS resources:copy-resources
    - echo -e 
        "
        ***************************************** \n
        $CI_JOB_STAGE END
        "
  only:
    - dist
    - pre_dist

# 패키징
package:
  stage: package

  script:
    - echo -e 
        "
        ***************************************** \n
        'MAKE JAR PACKAGE'                        \n
        "
    - mvn $MAVEN_CLI_OPTS package spring-boot:repackage
    - echo -e 
        "
        ***************************************** \n
        "
  only:
    - dist
    - pre_dist

# deploy:
#   stage: deploy
#   script:
#     - mvn $MAVEN_CLI_OPTS deploy
#   only:
#     - dist